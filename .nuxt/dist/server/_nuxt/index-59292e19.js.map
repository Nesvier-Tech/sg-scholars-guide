{"version":3,"file":"index-59292e19.js","sources":["../../../../node_modules/nuxt/dist/app/composables/state.js","../../../../composables/states.js","../../../../components/QuizScore.vue","../../../../components/QuestionCard.vue","../../../../components/FinishButton.vue","../../../../pages/quiz/index.vue"],"sourcesContent":["import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxt = useNuxtApp();\n  const state = toRef(nuxt.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxt.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : Array.isArray(keys) ? keys : [keys];\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","export const useFinished = () => useState('finished', () => false);\r\nexport const usePoints = () => useState('points', () => [0, 0, 0]);","<template>\r\n  <div v-if=\"finished\" class=\"quiz-score\" style=\"margin-top: 0;\">\r\n    <p>Score</p>\r\n    <p>{{ computeScore() }}/3</p>\r\n  </div>\r\n  <div v-if=\"!finished\" class=\"quiz-score\" style=\"margin-top: 0;\">\r\n    <p>Science</p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  const finished = useFinished();\r\n  \r\n  const points = usePoints();\r\n  \r\n\r\n  function computeScore() {\r\n    let score = 0;\r\n    for (const point of points.value) {\r\n      score += point;\r\n    }\r\n    return score;\r\n  }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  .quiz-score {\r\n    width: 100%;\r\n    padding: 1rem;\r\n    margin: auto;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n    background-color: white;\r\n    border-radius: 4px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n</style>","<template>\r\n  <div class=\"question-card\">\r\n    <p style=\"margin-top: 1rem; font-weight: 600;\">{{ question.title }}</p>\r\n    <p style=\"margin-bottom: 2rem;\">{{ question.body }}</p>\r\n    <div class=\"choice-container\">\r\n      <div @click=\"changeAnswerChoice('A')\" class=\"choice-button\" :class=\"{ 'choice-button-active': answerChoice === 'A', 'choice-button-correct': isCorrect('A'), 'choice-button-incorrect': isIncorrect('A'), 'choice-button-red-outline': isRedOutline('A'), 'choice-button': isRightAnswer('A') }\">\r\n        A. {{ question.choices[0] }}\r\n      </div>\r\n      <div @click=\"changeAnswerChoice('B')\" class=\"choice-button\" :class=\"{ 'choice-button-active': answerChoice === 'B', 'choice-button-correct': isCorrect('B'), 'choice-button-incorrect': isIncorrect('B'), 'choice-button-red-outline': isRedOutline('B'), 'choice-button': isRightAnswer('B') }\">\r\n        B. {{ question.choices[1] }}\r\n      </div>\r\n      <div @click=\"changeAnswerChoice('C')\" class=\"choice-button\" :class=\"{ 'choice-button-active': answerChoice === 'C', 'choice-button-correct': isCorrect('C'), 'choice-button-incorrect': isIncorrect('C'), 'choice-button-red-outline': isRedOutline('C'), 'choice-button': isRightAnswer('C') }\">\r\n        C. {{ question.choices[2] }}\r\n      </div>\r\n      <div @click=\"changeAnswerChoice('D')\" class=\"choice-button\" :class=\"{ 'choice-button-active': answerChoice === 'D', 'choice-button-correct': isCorrect('D'), 'choice-button-incorrect': isIncorrect('D'), 'choice-button-red-outline': isRedOutline('D'), 'choice-button': isRightAnswer('D') }\">\r\n        D. {{ question.choices[3] }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  const { question } = defineProps([\"question\"]);\r\n  let answerChoice = ref('');\r\n  const finished = useFinished();\r\n  const points = usePoints();\r\n\r\n  function changeAnswerChoice(newAnswer) {\r\n    answerChoice.value = newAnswer;\r\n    if (answerChoice.value == question.answer) {\r\n      points.value[question.id] = 1;\r\n      console.log(points.value)\r\n    } else {\r\n      points.value[question.id] = 0;\r\n      console.log(points.value)\r\n    }\r\n  }\r\n\r\n  function isCorrect(letter) {\r\n    if (answerChoice.value == question.answer && letter == question.answer && finished.value == true) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  function isIncorrect(letter) {\r\n    if (answerChoice.value == letter && letter != question.answer && finished.value == true) {\r\n      return true\r\n    } \r\n    return false\r\n  }\r\n\r\n  function isRedOutline(letter) {\r\n    if (answerChoice.value != letter && answerChoice.value != question.answer && letter != question.answer && finished.value == true) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  function isRightAnswer(letter) {\r\n    if (answerChoice.value != letter && letter == question.answer && finished.value == true) {\r\n      return true\r\n    } \r\n    return false\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .question-card {\r\n    padding: 1rem;\r\n    width: 100%;\r\n    margin: 2rem auto;\r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0.25rem 0.25rem 1rem rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n  }\r\n\r\n  .card {\r\n    width: 50%;\r\n    margin: auto;\r\n    \r\n  }\r\n\r\n  .choice-button {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    color: #1fab59;\r\n    border: 1px solid transparent;\r\n    border-color: #1fab59;\r\n    border-radius: 4px;\r\n    width: 90%;\r\n    margin: 0.5rem auto;\r\n    padding: 0.5rem 1rem;\r\n  }\r\n\r\n  .choice-button-red-outline {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    color: #c72828;\r\n    border: 1px solid transparent;\r\n    border-color: #c72828;\r\n    border-radius: 4px;\r\n    width: 90%;\r\n    margin: 0.5rem auto;\r\n    padding: 0.5rem 1rem;\r\n  }\r\n\r\n  .choice-button:hover {\r\n    background-color: #1fab59;\r\n    color: white;\r\n    border: 1px solid;\r\n  }\r\n\r\n  .choice-button-active {\r\n    background-color: #1fab59;\r\n    color: white;\r\n    border: 1px solid;\r\n  }\r\n\r\n  .choice-button-correct {\r\n    background-color: #1fab59;\r\n    color: white;\r\n    border: 1px solid;\r\n  }\r\n\r\n  .choice-button-incorrect {\r\n    background-color: #c72828;\r\n    color: white;\r\n    border: 1px solid;\r\n  }\r\n  .choice-container {\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    padding: 0 2rem;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n</style>","\r\nimport type { inlineConfig } from '#build/types/app.config';\r\n\r\nimport type { inlineConfig } from '#build/types/app.config';\r\n<template>\r\n  <div @click=\"setFinish\" class=\"finish-button\">\r\n    <p>Finish</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  const finished = useFinished()\r\n\r\n  function setFinish() {\r\n    finished.value = true;\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .finish-button {\r\n    display: inline-block;\r\n    background-color: #1fab59;\r\n    border-color: #1fab59;\r\n    border-radius: 4px;\r\n    margin: auto;\r\n    margin-top: 2px;\r\n    margin-bottom: 2px;\r\n    padding: 0.5rem 1rem;\r\n    color: #fff;\r\n    border: 1px solid transparent;\r\n  }\r\n\r\n  .finish-button:hover {\r\n    color: #1fab59;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border: 1px solid;\r\n  }\r\n</style>","<template >\r\n    <div class=\"quiz-body-grid\">\r\n      <div style=\"padding: 0 1rem;\">\r\n        <div class=\"card-container\" style=\"margin-top: 0;\">\r\n          <p>Marc Peejay Viernes</p>\r\n          <p>Student</p>\r\n        </div>\r\n      </div>\r\n      <div style=\"padding: 0 2rem;\">\r\n        <QuizScore style=\"margin-top: 0;\"/>\r\n        <div>\r\n          <div v-for=\"q in questions\">\r\n            <QuestionCard :question=\"q\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-100\">\r\n          <FinishButton />\r\n        </div>\r\n      </div>\r\n      <div style=\"padding: 0 1rem;\">\r\n        <div class=\"card-container\" style=\"margin-top: 0;\">\r\n          <p>Science</p>\r\n          <p style=\"margin-top: 1rem;\">Time Left:</p>\r\n          <p>1:00:00</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  </template>\r\n  \r\n  <script setup>\r\n    const finished = useFinished();\r\n  \r\n    const questions = [\r\n      {id: 0, title: \"Question 1\", body: \"The layer of gas covering the earth is called:\", choices: [\"Atmosphere\", \"Hydrosphere\", \"Litosphere\", \"Troposphere\"], answer: \"A\"},\r\n      {id: 1, title: \"Question 2\", body: \"A distance of one mile is about:\" , choices: [\"1 kilometer\", \"16 kilometers\", \"160 kilometers\", \"1.6 kilometers\"], answer: \"D\"},\r\n      {id: 2, title: \"Question 3\", body: \"The largest object in the solar system is:\", choices: [\"A star\", \"A planet\", \"An asteroid\", \"A meteor\"], answer: \"A\"},\r\n    ];\r\n  \r\n  </script>\r\n  \r\n  <style scoped>\r\n    .quiz-body-grid {\r\n      background-color: rgba(0, 0, 0, 0.01);\r\n      padding: 4rem 4rem;\r\n      display: grid;\r\n      grid-template-columns: 1fr 2fr 1fr;\r\n    }\r\n    .container-100 {\r\n      width: 100%;\r\n      margin: auto;\r\n      margin-top: 1rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n  \r\n    .card-container {\r\n      width: 100%;\r\n      margin: 1rem auto;\r\n      border-radius: 0.5rem;\r\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n      padding: 1rem;\r\n      background-color: white;\r\n    }\r\n  \r\n  </style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,MAAM,oBAAoB;AACnB,SAAS,YAAY,MAAM;AAChC,QAAM,UAAU,OAAO,KAAK,KAAK,SAAS,CAAC,MAAM,WAAW,KAAK,IAAK,IAAG;AACzE,MAAI,OAAO,KAAK,CAAC,MAAM,UAAU;AAC/B,SAAK,QAAQ,OAAO;AAAA,EACrB;AACD,QAAM,CAAC,MAAM,IAAI,IAAI;AACrB,MAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,UAAM,IAAI,UAAU,6CAA6C,IAAI;AAAA,EACtE;AACD,MAAI,SAAS,UAAU,OAAO,SAAS,YAAY;AACjD,UAAM,IAAI,MAAM,gDAAgD,IAAI;AAAA,EACrE;AACD,QAAM,MAAM,oBAAoB;AAChC,QAAM,OAAO;AACb,QAAM,QAAQ,MAAM,KAAK,QAAQ,OAAO,GAAG;AAC3C,MAAI,MAAM,UAAU,UAAU,MAAM;AAClC,UAAM,eAAe;AACrB,QAAI,MAAM,YAAY,GAAG;AACvB,WAAK,QAAQ,MAAM,GAAG,IAAI;AAC1B,aAAO;AAAA,IACR;AACD,UAAM,QAAQ;AAAA,EACf;AACD,SAAO;AACT;AC3BO,MAAM,cAAc,MAAM,SAAS,YAAY,MAAM,KAAK;AAC1D,MAAM,YAAY,MAAM,SAAS,UAAU,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;;;;;;ACW/D,UAAM,WAAW;AAEjB,UAAM,SAAS;AAGf,aAAS,eAAe;AACtB,UAAI,QAAQ;AACZ,iBAAW,SAAS,OAAO,OAAO;AAChC,iBAAS;AAAA,MACV;AACD,aAAO;AAAA,IACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDD,UAAM,EAAE,SAAU,IAAG;AACrB,QAAI,eAAe,IAAI,EAAE;AACzB,UAAM,WAAW;AACF,cAAY;AAa3B,aAAS,UAAU,QAAQ;AACzB,UAAI,aAAa,SAAS,SAAS,UAAU,UAAU,SAAS,UAAU,SAAS,SAAS,MAAM;AAChG,eAAO;AAAA,MACR;AACD,aAAO;AAAA,IACR;AAED,aAAS,YAAY,QAAQ;AAC3B,UAAI,aAAa,SAAS,UAAU,UAAU,SAAS,UAAU,SAAS,SAAS,MAAM;AACvF,eAAO;AAAA,MACR;AACD,aAAO;AAAA,IACR;AAED,aAAS,aAAa,QAAQ;AAC5B,UAAI,aAAa,SAAS,UAAU,aAAa,SAAS,SAAS,UAAU,UAAU,SAAS,UAAU,SAAS,SAAS,MAAM;AAChI,eAAO;AAAA,MACR;AACD,aAAO;AAAA,IACR;AAED,aAAS,cAAc,QAAQ;AAC7B,UAAI,aAAa,SAAS,UAAU,UAAU,SAAS,UAAU,SAAS,SAAS,MAAM;AACvF,eAAO;AAAA,MACR;AACD,aAAO;AAAA,IACR;;;;;;;;;;;;;;;;;;ACrDgB,gBAAa;;;;;;;;;;;;;;;;;;ACoBX,gBAAc;AAE/B,UAAM,YAAY;AAAA,MAChB,EAAC,IAAI,GAAG,OAAO,cAAc,MAAM,kDAAkD,SAAS,CAAC,cAAc,eAAe,cAAc,aAAa,GAAG,QAAQ,IAAG;AAAA,MACrK,EAAC,IAAI,GAAG,OAAO,cAAc,MAAM,oCAAqC,SAAS,CAAC,eAAe,iBAAiB,kBAAkB,gBAAgB,GAAG,QAAQ,IAAG;AAAA,MAClK,EAAC,IAAI,GAAG,OAAO,cAAc,MAAM,8CAA8C,SAAS,CAAC,UAAU,YAAY,eAAe,UAAU,GAAG,QAAQ,IAAG;AAAA,IAC9J;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}