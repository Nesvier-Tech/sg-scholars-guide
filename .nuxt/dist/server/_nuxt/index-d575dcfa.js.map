{"version":3,"file":"index-d575dcfa.js","sources":["../../../../pages/auth/sign-up/index.vue"],"sourcesContent":["<!-- TODO: Refactor this shit. Use SFCs. -->\r\n\r\n<!-- Signup.vue -->\r\n<template>\r\n  <div class=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n    <div class=\"max-w-md w-full bg-white p-8 shadow-md rounded-md\">\r\n      <h2 class=\"text-3xl font-semibold mb-6\">Sign Up</h2>\r\n\r\n      <form @submit.prevent=\"signup\">\r\n        <div class=\"mb-4\">\r\n          <label for=\"username\" class=\"block text-gray-700 text-sm font-medium mb-2\">Username</label>\r\n          <input v-model=\"username\" type=\"text\" id=\"username\" name=\"username\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-300\"\r\n            required>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <label for=\"email\" class=\"block text-gray-700 text-sm font-medium mb-2\">Email Address</label>\r\n          <input v-model=\"email\" type=\"email\" id=\"email\" name=\"email\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-300\"\r\n            required>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <label for=\"password\" class=\"block text-gray-700 text-sm font-medium mb-2\">Password</label>\r\n          <input v-model=\"password\" type=\"password\" id=\"password\" name=\"password\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-300\"\r\n            required>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <label for=\"confirmPassword\" class=\"block text-gray-700 text-sm font-medium mb-2\">Confirm Password</label>\r\n          <input v-model=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-300\"\r\n            required>\r\n        </div>\r\n\r\n        <button type=\"submit\"\r\n          class=\"w-full bg-blue-500 text-white p-3 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:border-blue-300\">Sign\r\n          Up</button>\r\n      </form>\r\n\r\n      <!-- Already have an account Link -->\r\n      <div class=\"mt-4 text-center\">\r\n        <p class=\"text-sm\">Already have an account? <router-link to=\"/auth/login\"\r\n            class=\"text-blue-500 hover:underline\">Login\r\n            here.</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Account, ID } from \"appwrite\";\r\n\r\nconst client = getClient();\r\nconst account = new Account(client);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async signup() {\r\n      try {\r\n        // Check if passwords match\r\n        if (this.password !== this.confirmPassword) {\r\n          console.error('Passwords do not match');\r\n          alert('Are you f***ing blind?! Passwords do not match!');\r\n          // Handle error, e.g., show an error message to the user\r\n          return;\r\n        }\r\n\r\n        // Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. \r\n        // Can't start with a special char. Max length is 36 chars.\r\n        // Temporary use the Date.now() as the user ID (for now).\r\n        let userID = Date.now().toString();\r\n\r\n        const promise = account.create(userID, this.email, this.password, this.username);\r\n        console.log(`creating user... (${this.email})`);\r\n\r\n        promise.then(function (response) {\r\n          console.log(response); // Success\r\n          alert('User created!');\r\n        }, function (error) {\r\n          console.log(error); // Failure\r\n          alert(`User creation failed!\\n${error.message}`);\r\n        });\r\n      } catch (error) {\r\n        console.error('Signup Failed', error);\r\n        alert('Signup failed!');\r\n        // Handle signup failure, show error messages, etc.\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* You can customize the styles further based on your design preferences */\r\n</style>\r\n"],"names":["_ssrRenderAttrs","_mergeProps","_push","_parent"],"mappings":";;;;;;;;;;;;;;;;;;;AAuDA,MAAM,SAAS,UAAS;AACxB,MAAM,UAAU,IAAI,QAAQ,MAAM;AAElC,MAAK,YAAU;AAAA,EACb,OAAO;AACL,WAAO;AAAA,MACL,UAAU;AAAA,MACV,OAAO;AAAA,MACP,UAAU;AAAA,MACV,iBAAiB;AAAA;EAEpB;AAAA,EACD,SAAS;AAAA,IACP,MAAM,SAAS;AACb,UAAI;AAEF,YAAI,KAAK,aAAa,KAAK,iBAAiB;AAC1C,kBAAQ,MAAM,wBAAwB;AACtC,gBAAM,iDAAiD;AAEvD;AAAA,QACF;AAKA,YAAI,SAAS,KAAK,IAAK,EAAC,SAAQ;AAEhC,cAAM,UAAU,QAAQ,OAAO,QAAQ,KAAK,OAAO,KAAK,UAAU,KAAK,QAAQ;AAC/E,gBAAQ,IAAI,qBAAqB,KAAK,KAAK,GAAG;AAE9C,gBAAQ,KAAK,SAAU,UAAU;AAC/B,kBAAQ,IAAI,QAAQ;AACpB,gBAAM,eAAe;AAAA,QACtB,GAAE,SAAU,OAAO;AAClB,kBAAQ,IAAI,KAAK;AACjB,gBAAM;AAAA,EAA0B,MAAM,OAAO,EAAE;AAAA,QACjD,CAAC;AAAA,MACD,SAAO,OAAO;AACd,gBAAQ,MAAM,iBAAiB,KAAK;AACpC,cAAM,gBAAgB;AAAA,MAExB;AAAA,IACD;AAAA,EACF;AACH;;;eAhGOA,eAAAC,WAAA,EAAA,OAAM,4DAA2D,GAAA,MAAA,CAAA,wQAO9C,MAAQ,QAAA,yTAOR,MAAK,KAAA,kTAOL,MAAQ,QAAA,0UAOR,MAAe,eAAA;;IAYwB,IAAG;AAAA,IACxD,OAAM;AAAA;qBADkC,CAErB,GAAAC,QAAAC,UAAA,aAAA;;;;;0BADmB,aACjC;AAAA;;;;;;;;;;;;;;"}